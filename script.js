let points = parseInt(localStorage.getItem('points')) || 0;
let progressData = JSON.parse(localStorage.getItem('progress')) || {
    alphabet: {},
    greetings: {},
    numbers: {},
    colors: {},
    family: {},
    weather: {},
    food: {},
    travel: {},
    animals: {}
};
let achievements = JSON.parse(localStorage.getItem('achievements')) || [];

const achievementList = [
    {
        id: 1,
        name: "–ù–æ–≤–∏—á–æ–∫",
        description: "–ó–∞—Ä–∞–±–æ—Ç–∞–π—Ç–µ 50 –±–∞–ª–ª–æ–≤",
        condition: (p) => p >= 50,
        icon: "ü•á"
    },
    {
        id: 2,
        name: "–ó–Ω–∞—Ç–æ–∫ –∞–ª—Ñ–∞–≤–∏—Ç–∞",
        description: "–ò–∑—É—á–∏—Ç–µ –≤—Å–µ –±—É–∫–≤—ã",
        condition: (data) => Object.keys(data.alphabet).length === 33,
        icon: "üî§"
    }
];

const translations = {
    ru: {
        headerTitle: "–ò–∑—É—á–∞–π—Ç–µ —Ä—É—Å—Å–∫–∏–π —è–∑—ã–∫ –¥–ª—è –∏–Ω–æ—Å—Ç—Ä–∞–Ω—Ü–µ–≤",
        headerSubtitle: "–°–æ–∑–¥–∞–Ω–æ –¥–ª—è —Ç–µ—Ö, –∫—Ç–æ —Ö–æ—á–µ—Ç –ª–µ–≥–∫–æ –∏ –±—ã—Å—Ç—Ä–æ –≤—ã—É—á–∏—Ç—å —Ä—É—Å—Å–∫–∏–π!",
        tabLessons: "–£—Ä–æ–∫–∏",
        tabExercises: "–£–ø—Ä–∞–∂–Ω–µ–Ω–∏—è",
        tabProgress: "–ü—Ä–æ–≥—Ä–µ—Å—Å",
        lessonAlphabet: "–ê–ª—Ñ–∞–≤–∏—Ç",
        lessonGreetings: "–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏—è",
        lessonNumbers: "–¶–∏—Ñ—Ä—ã",
        lessonColors: "–¶–≤–µ—Ç–∞",
        lessonFamily: "–°–µ–º—å—è",
        exercise1Title: "–£–ø—Ä–∞–∂–Ω–µ–Ω–∏–µ 1: –ß—Ç–æ –∑–∞ –±—É–∫–≤–∞?",
        exercise2Title: "–£–ø—Ä–∞–∂–Ω–µ–Ω–∏–µ 2: –ß—Ç–æ –∑–∞ –±—É–∫–≤–∞?",
        exercise3Title: "–£–ø—Ä–∞–∂–Ω–µ–Ω–∏–µ 3: –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏—è",
        exercise4Title: "–£–ø—Ä–∞–∂–Ω–µ–Ω–∏–µ 4: –í–æ–ø—Ä–æ—Å",
        playBtn: "–ü—Ä–æ–∏–≥—Ä–∞—Ç—å",
        checkBtn: "–ü—Ä–æ–≤–µ—Ä–∏—Ç—å",
        enterLetter: "–í–≤–µ–¥–∏—Ç–µ –±—É–∫–≤—É",
        enterPhrase: "–í–≤–µ–¥–∏—Ç–µ —Ñ—Ä–∞–∑—É",
        enterAnswer: "–í–≤–µ–¥–∏—Ç–µ –æ—Ç–≤–µ—Ç",
        progressHeader: "–í–∞—à –ø—Ä–æ–≥—Ä–µ—Å—Å:",
        achievement1Name: "–ù–æ–≤–∏—á–æ–∫",
        achievement1Desc: "–ó–∞—Ä–∞–±–æ—Ç–∞–π—Ç–µ 50 –±–∞–ª–ª–æ–≤",
        achievement2Name: "–ó–Ω–∞—Ç–æ–∫ –∞–ª—Ñ–∞–≤–∏—Ç–∞",
        achievement2Desc: "–ò–∑—É—á–∏—Ç–µ –≤—Å–µ –±—É–∫–≤—ã",
        pointsText: "–±–∞–ª–ª–æ–≤",
        loginBtn: "–í–æ–π—Ç–∏",
        registerBtn: "–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è",
        logoutBtn: "–í—ã–π—Ç–∏",
        loginTitle: "–í–æ–π—Ç–∏",
        registerTitle: "–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è",
        loginSubmit: "–í–æ–π—Ç–∏",
        registerSubmit: "–ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è",
        usernamePlaceholder: "–õ–æ–≥–∏–Ω",
        passwordPlaceholder: "–ü–∞—Ä–æ–ª—å",
        selectLanguage: "–í—ã–±–µ—Ä–∏—Ç–µ —è–∑—ã–∫:",
        introInfo: "–ù–∞—à —Å–∞–π—Ç –ø–æ–º–æ–≥–∞–µ—Ç –∏–Ω–æ—Å—Ç—Ä–∞–Ω—Ü–∞–º –∏–∑—É—á–∞—Ç—å —Ä—É—Å—Å–∫–∏–π —è–∑—ã–∫. –ó–¥–µ—Å—å –µ—Å—Ç—å –∏–Ω—Ç–µ—Ä–µ—Å–Ω—ã–µ —É—Ä–æ–∫–∏, —É–ø—Ä–∞–∂–Ω–µ–Ω–∏—è –∏ –∞—É–¥–∏–æ, —á—Ç–æ–±—ã –≤—ã –±—ã—Å—Ç—Ä–æ –æ—Å–≤–æ–∏–ª–∏ —è–∑—ã–∫.",
        lessonWeather: "–ü–æ–≥–æ–¥–∞",
        weatherInfo: "–ò–∑—É—á–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏—è –ø–æ–≥–æ–¥–Ω—ã—Ö —è–≤–ª–µ–Ω–∏–π –∏ —Ñ—Ä–∞–∑, —Å–≤—è–∑–∞–Ω–Ω—ã—Ö —Å –ø–æ–≥–æ–¥–æ–π.",
        weatherSunnyToday: "–°–µ–≥–æ–¥–Ω—è —Å–æ–ª–Ω–µ—á–Ω–æ",
        lessonFood: "–ï–¥–∞",
        foodInfo: "–£–∑–Ω–∞–π—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏—è –ø–æ–ø—É–ª—è—Ä–Ω—ã—Ö –±–ª—é–¥, —Ñ—Ä—É–∫—Ç–æ–≤, –æ–≤–æ—â–µ–π –∏ –Ω–∞–ø–∏—Ç–∫–æ–≤.",
        foodApple: "–Ø–±–ª–æ–∫–æ",
        lessonTravel: "–ü—É—Ç–µ—à–µ—Å—Ç–≤–∏—è",
        travelInfo: "–ù–∞—É—á–∏—Ç–µ—Å—å –≥–æ–≤–æ—Ä–∏—Ç—å –æ –ø—É—Ç–µ—à–µ—Å—Ç–≤–∏—è—Ö: –∫–∞–∫ –¥–æ–±—Ä–∞—Ç—å—Å—è, –≥–¥–µ –æ—Å—Ç–∞–Ω–æ–≤–∏—Ç—å—Å—è –∏ —á—Ç–æ –ø–æ—Å–µ—Ç–∏—Ç—å.",
        travelTrain: "–ü–æ–µ–∑–¥",
        lessonAnimals: "–ñ–∏–≤–æ—Ç–Ω—ã–µ",
        animalsInfo: "–ò–∑—É—á–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏—è –∂–∏–≤–æ—Ç–Ω—ã—Ö –∏ —Ñ—Ä–∞–∑—ã, —Å–≤—è–∑–∞–Ω–Ω—ã–µ —Å –¥–æ–º–∞—à–Ω–∏–º–∏ –∏ –¥–∏–∫–∏–º–∏ –∂–∏–≤–æ—Ç–Ω—ã–º–∏.",
        animalsDog: "–°–æ–±–∞–∫–∞"
    },
    en: {
        headerTitle: "Learn Russian for Foreigners",
        headerSubtitle: "Designed for those who want to learn Russian quickly and easily!",
        tabLessons: "Lessons",
        tabExercises: "Exercises",
        tabProgress: "Progress",
        lessonAlphabet: "Alphabet",
        lessonGreetings: "Greetings",
        lessonNumbers: "Numbers",
        lessonColors: "Colors",
        lessonFamily: "Family",
        exercise1Title: "Exercise 1: What letter is it?",
        exercise2Title: "Exercise 2: What letter is it?",
        exercise3Title: "Exercise 3: Greetings",
        exercise4Title: "Exercise 4: Question",
        playBtn: "Play",
        checkBtn: "Check",
        enterLetter: "Enter letter",
        enterPhrase: "Enter phrase",
        enterAnswer: "Enter answer",
        progressHeader: "Your Progress:",
        achievement1Name: "Beginner",
        achievement1Desc: "Earn 50 points",
        achievement2Name: "Alphabet Expert",
        achievement2Desc: "Learn all letters",
        pointsText: "points",
        loginBtn: "Login",
        registerBtn: "Register",
        logoutBtn: "Logout",
        loginTitle: "Login",
        registerTitle: "Register",
        loginSubmit: "Login",
        registerSubmit: "Register",
        usernamePlaceholder: "Username",
        passwordPlaceholder: "Password",
        selectLanguage: "Select Language:",
        introInfo: "Our site helps foreigners learn Russian with engaging lessons, exercises, and audio materials to master the language fast.",
        lessonWeather: "Weather",
        weatherInfo: "Learn the names of weather phenomena and phrases related to the weather.",
        weatherSunnyToday: "It's sunny today",
        lessonFood: "Food",
        foodInfo: "Discover the names of popular dishes, fruits, vegetables, and drinks.",
        foodApple: "Apple",
        lessonTravel: "Travel",
        travelInfo: "Learn to talk about travel: how to get there, where to stay, and what to visit.",
        travelTrain: "Train",
        lessonAnimals: "Animals",
        animalsInfo: "Learn the names of animals and phrases related to pets and wild animals.",
        animalsDog: "Dog"
    },
    es: {
        headerTitle: "Aprende Ruso para Extranjeros",
        headerSubtitle: "¬°Dise√±ado para quienes quieren aprender ruso r√°pido y f√°cil!",
        tabLessons: "Lecciones",
        tabExercises: "Ejercicios",
        tabProgress: "Progreso",
        lessonAlphabet: "Alfabeto",
        lessonGreetings: "Saludos",
        lessonNumbers: "N√∫meros",
        lessonColors: "Colores",
        lessonFamily: "Familia",
        exercise1Title: "Ejercicio 1: ¬øQu√© letra es?",
        exercise2Title: "Ejercicio 2: ¬øQu√© letra es?",
        exercise3Title: "Ejercicio 3: Saludos",
        exercise4Title: "Ejercicio 4: Pregunta",
        playBtn: "Reproducir",
        checkBtn: "Verificar",
        enterLetter: "Ingrese la letra",
        enterPhrase: "Ingrese la frase",
        enterAnswer: "Ingrese la respuesta",
        progressHeader: "Tu Progreso:",
        achievement1Name: "Principiante",
        achievement1Desc: "Gana 50 puntos",
        achievement2Name: "Experto en Alfabeto",
        achievement2Desc: "Aprende todas las letras",
        pointsText: "puntos",
        loginBtn: "Iniciar sesi√≥n",
        registerBtn: "Registrarse",
        logoutBtn: "Cerrar sesi√≥n",
        loginTitle: "Iniciar sesi√≥n",
        registerTitle: "Registrarse",
        loginSubmit: "Entrar",
        registerSubmit: "Registrar",
        usernamePlaceholder: "Usuario",
        passwordPlaceholder: "Contrase√±a",
        selectLanguage: "Seleccione el idioma:",
        introInfo: "Nuestro sitio ayuda a extranjeros a aprender ruso con lecciones interesantes, ejercicios y audio para dominar el idioma r√°pidamente.",
        lessonWeather: "Tiempo",
        weatherInfo: "Aprende los nombres de los fen√≥menos meteorol√≥gicos y las frases relacionadas con el tiempo.",
        weatherSunnyToday: "Hoy est√° soleado",
        lessonFood: "Comida",
        foodInfo: "Descubre los nombres de platos populares, frutas, verduras y bebidas.",
        foodApple: "Manzana",
        lessonTravel: "Viajes",
        travelInfo: "Aprende a hablar sobre viajes: c√≥mo llegar, d√≥nde hospedarse y qu√© visitar.",
        travelTrain: "Tren",
        lessonAnimals: "Animales",
        animalsInfo: "Aprende los nombres de los animales y frases relacionadas con mascotas y animales salvajes.",
        animalsDog: "Perro"
    },
    fr: {
        headerTitle: "Apprenez le Russe pour √âtrangers",
        headerSubtitle: "Con√ßu pour ceux qui veulent apprendre le russe rapidement et facilement !",
        tabLessons: "Le√ßons",
        tabExercises: "Exercices",
        tabProgress: "Progression",
        lessonAlphabet: "Alphabet",
        lessonGreetings: "Salutations",
        lessonNumbers: "Chiffres",
        lessonColors: "Couleurs",
        lessonFamily: "Famille",
        exercise1Title: "Exercice 1 : Quelle lettre est-ce ?",
        exercise2Title: "Exercice 2 : Quelle lettre est-ce ?",
        exercise3Title: "Exercice 3 : Salutations",
        exercise4Title: "Exercice 4 : Question",
        playBtn: "Jouer",
        checkBtn: "V√©rifier",
        enterLetter: "Entrez la lettre",
        enterPhrase: "Entrez la phrase",
        enterAnswer: "Entrez la r√©ponse",
        progressHeader: "Votre Progression :",
        achievement1Name: "D√©butant",
        achievement1Desc: "Gagnez 50 points",
        achievement2Name: "Expert de l'Alphabet",
        achievement2Desc: "Apprenez toutes les lettres",
        pointsText: "points",
        loginBtn: "Se connecter",
        registerBtn: "S'inscrire",
        logoutBtn: "Se d√©connecter",
        loginTitle: "Connexion",
        registerTitle: "Inscription",
        loginSubmit: "Connexion",
        registerSubmit: "Inscription",
        usernamePlaceholder: "Nom d'utilisateur",
        passwordPlaceholder: "Mot de passe",
        selectLanguage: "S√©lectionnez la langue:",
        introInfo: "Notre site aide les √©trangers √† apprendre le russe avec des le√ßons captivantes, des exercices et du mat√©riel audio pour ma√Ætriser rapidement la langue.",
        lessonWeather: "M√©t√©o",
        weatherInfo: "Apprenez les noms des ph√©nom√®nes m√©t√©orologiques et les phrases associ√©es.",
        weatherSunnyToday: "Il fait soleil aujourd'hui",
        lessonFood: "Nourriture",
        foodInfo: "D√©couvrez les noms des plats populaires, fruits, l√©gumes et boissons.",
        foodApple: "Pomme",
        lessonTravel: "Voyages",
        travelInfo: "Apprenez √† parler de voyages : comment vous y rendre, o√π s√©journer et que visiter.",
        travelTrain: "Train",
        lessonAnimals: "Animaux",
        animalsInfo: "Apprenez les noms des animaux et des phrases li√©es aux animaux domestiques et sauvages.",
        animalsDog: "Chien"
    },
    de: {
        headerTitle: "Russisch Lernen f√ºr Ausl√§nder",
        headerSubtitle: "Entworfen f√ºr diejenigen, die schnell und einfach Russisch lernen m√∂chten!",
        tabLessons: "Lektionen",
        tabExercises: "√úbungen",
        tabProgress: "Fortschritt",
        lessonAlphabet: "Alphabet",
        lessonGreetings: "Gr√º√üe",
        lessonNumbers: "Zahlen",
        lessonColors: "Farben",
        lessonFamily: "Familie",
        exercise1Title: "√úbung 1: Welcher Buchstabe?",
        exercise2Title: "√úbung 2: Welcher Buchstabe?",
        exercise3Title: "√úbung 3: Gr√º√üe",
        exercise4Title: "√úbung 4: Frage",
        playBtn: "Abspielen",
        checkBtn: "√úberpr√ºfen",
        enterLetter: "Buchstabe eingeben",
        enterPhrase: "Phrase eingeben",
        enterAnswer: "Antwort eingeben",
        progressHeader: "Dein Fortschritt:",
        achievement1Name: "Anf√§nger",
        achievement1Desc: "Sammle 50 Punkte",
        achievement2Name: "Alphabet-Experte",
        achievement2Desc: "Lerne alle Buchstaben",
        pointsText: "Punkte",
        loginBtn: "Anmelden",
        registerBtn: "Registrieren",
        logoutBtn: "Abmelden",
        loginTitle: "Anmeldung",
        registerTitle: "Registrierung",
        loginSubmit: "Anmelden",
        registerSubmit: "Registrieren",
        usernamePlaceholder: "Benutzername",
        passwordPlaceholder: "Passwort",
        selectLanguage: "Sprache w√§hlen:",
        introInfo: "Unsere Website hilft Ausl√§ndern, Russisch mit spannenden Lektionen, √úbungen und Audio schnell zu lernen.",
        lessonWeather: "Wetter",
        weatherInfo: "Lerne die Namen von Wetterph√§nomenen und S√§tzen, die mit dem Wetter zusammenh√§ngen.",
        weatherSunnyToday: "Es ist heute sonnig",
        lessonFood: "Essen",
        foodInfo: "Erfahre die Namen von beliebten Gerichten, Fr√ºchten, Gem√ºse und Getr√§nken.",
        foodApple: "Apfel",
        lessonTravel: "Reisen",
        travelInfo: "Lerne, √ºber Reisen zu sprechen: wie man hinkommt, wo man √ºbernachten und was man besichtigen kann.",
        travelTrain: "Zug",
        lessonAnimals: "Tiere",
        animalsInfo: "Lerne die Namen von Tieren und S√§tze √ºber Haustiere und Wildtiere.",
        animalsDog: "Hund"
    }
};

let currentLang = localStorage.getItem('language') || 'ru';

function updateTranslations() {
    document.querySelectorAll('[data-i18n]').forEach(el => {
        const key = el.getAttribute('data-i18n');
        if (translations[currentLang] && translations[currentLang][key]) {
            el.textContent = translations[currentLang][key];
        }
    });
    document.querySelectorAll('[data-i18n-placeholder]').forEach(el => {
        const key = el.getAttribute('data-i18n-placeholder');
        if (translations[currentLang] && translations[currentLang][key]) {
            el.placeholder = translations[currentLang][key];
        }
    });
}

document.querySelectorAll('.lang-btn').forEach(btn => {
    btn.addEventListener('click', () => {
        currentLang = btn.getAttribute('data-lang');
        localStorage.setItem('language', currentLang);
        updateTranslations();
    });
});

document.addEventListener('DOMContentLoaded', () => {
    initAudioPlayers();
    initExercises();
    updatePoints();
    updateProgress();
    renderAchievements();
    initTabs();
    updateTranslations();
    initAccountSystem();
});

function initAudioPlayers() {
    document.querySelectorAll('[data-audio]').forEach(button => {
        button.addEventListener('click', (e) => {
            const audioUrl = e.currentTarget.dataset.audio;
            playAudio(audioUrl);

            const card = e.currentTarget.closest('.lesson-card');
            let category = card ? card.querySelector('h2').textContent.toLowerCase().replace(/\s/g, '_') : 'other';

            const itemId = e.currentTarget.textContent.trim() || audioUrl.split('/').pop();

            if (!progressData[category]) progressData[category] = {};
            if (!progressData[category][itemId]) {
                points += 1;
                progressData[category][itemId] = true;
                saveProgress();
            }
        });
    });
}

function playAudio(url) {
    try {
        const audio = new Audio(url);
        audio.play().catch(error => console.error('–û—à–∏–±–∫–∞ –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏—è:', error));
    } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∞—É–¥–∏–æ:', error);
    }
}

function initExercises() {
    document.querySelectorAll('.check-btn').forEach(button => {
        button.addEventListener('click', (e) => {
            const exercise = e.target.closest('.exercise-card');
            const input = exercise.querySelector('.answer-input');
            const result = exercise.querySelector('.exercise-result');
            const correct = exercise.dataset.correct.toLowerCase().trim();

            if (input.value.toLowerCase().trim() === correct) {
                result.textContent = '‚úÖ ' + translations[currentLang]['checkBtn'] + '! +5 ' + translations[currentLang]['pointsText'];
                result.style.color = '#4CAF50';
                points += 5;
                exercise.classList.add('completed');
            } else {
                result.textContent = '‚ùå ' + translations[currentLang]['checkBtn'] + '.';
                result.style.color = '#d52b1e';
            }

            updatePoints();
            checkAchievements();
        });
    });
}

function initTabs() {
    document.querySelectorAll('.tab-content').forEach((tab, index) => {
        tab.style.display = index === 0 ? 'block' : 'none';
    });
    document.querySelectorAll('.tab-button').forEach(button => {
        button.addEventListener('click', (e) => {
            const tabId = e.target.dataset.tab;
            document.querySelectorAll('.tab-content').forEach(tab => {
                tab.style.display = 'none';
            });
            document.querySelectorAll('.tab-button').forEach(btn => {
                btn.classList.remove('active');
            });
            const activeTab = document.getElementById(tabId);
            if (activeTab) {
                activeTab.style.display = 'block';
                e.target.classList.add('active');
            }
        });
    });
}

function updatePoints() {
    document.getElementById('points').textContent = points;
    localStorage.setItem('points', points);
}

function updateProgress() {
    const totalItems = Object.values(progressData).reduce((acc, category) => acc + Object.keys(category).length, 0);
    const progressPercent = Math.min(Math.floor((totalItems / 106) * 100), 100);
    const progressBar = document.querySelector('.progress-fill');
    progressBar.style.width = `${progressPercent}%`;
    document.querySelector('.progress-percent').textContent = `${progressPercent}%`;
    localStorage.setItem('progress', JSON.stringify(progressData));
}

function checkAchievements() {
    achievementList.forEach(ach => {
        if (!achievements.includes(ach.id)) {
            const conditionMet = ach.condition(points, progressData);
            if (conditionMet) {
                achievements.push(ach.id);
                showAchievementNotification(ach);
            }
        }
    });
    localStorage.setItem('achievements', JSON.stringify(achievements));
    renderAchievements();
}

function showAchievementNotification(achievement) {
    const notification = document.createElement('div');
    notification.className = 'achievement-notification';
    notification.innerHTML = `
    <div class="achievement-icon">${achievement.icon}</div>
    <div>
      <h4>–î–æ—Å—Ç–∏–∂–µ–Ω–∏–µ —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–æ!</h4>
      <p>${achievement.name}</p>
      <small>${achievement.description}</small>
    </div>
  `;
    document.body.appendChild(notification);
    setTimeout(() => notification.remove(), 5000);
}

function renderAchievements() {
    const container = document.querySelector('.achievements-container');
    container.innerHTML = achievementList.map(ach => `
    <div class="achievement ${achievements.includes(ach.id) ? 'unlocked' : 'locked'}">
      <div class="achievement-icon">${ach.icon}</div>
      <div class="achievement-info">
        <h4>${ach.name}</h4>
        <p>${ach.description}</p>
      </div>
    </div>
  `).join('');
}

function saveProgress() {
    localStorage.setItem('progress', JSON.stringify(progressData));
    updateProgress();
    checkAchievements();
}

function initAccountSystem() {
    const loginBtn = document.getElementById('login-btn');
    const registerBtn = document.getElementById('register-btn');
    const logoutBtn = document.getElementById('logout-btn');
    const loginModal = document.getElementById('login-modal');
    const registerModal = document.getElementById('register-modal');

    loginBtn.addEventListener('click', () => { loginModal.style.display = 'block'; });
    registerBtn.addEventListener('click', () => { registerModal.style.display = 'block'; });
    document.querySelectorAll('.close-modal').forEach(span => {
        span.addEventListener('click', () => {
            document.getElementById(span.dataset.modal).style.display = 'none';
        });
    });
    document.getElementById('login-submit').addEventListener('click', () => {
        const username = document.getElementById('login-username').value.trim();
        const password = document.getElementById('login-password').value;
        let users = JSON.parse(localStorage.getItem('users')) || [];
        const user = users.find(u => u.username === username && u.password === password);
        if (user) {
            localStorage.setItem('currentUser', username);
            updateAccountUI();
            loginModal.style.display = 'none';
        } else {
            alert('–ù–µ–≤–µ—Ä–Ω—ã–π –ª–æ–≥–∏–Ω –∏–ª–∏ –ø–∞—Ä–æ–ª—å');
        }
    });
    document.getElementById('register-submit').addEventListener('click', () => {
        const username = document.getElementById('register-username').value.trim();
        const password = document.getElementById('register-password').value;
        if (!username || !password) {
            alert('–ó–∞–ø–æ–ª–Ω–∏—Ç–µ –≤—Å–µ –ø–æ–ª—è');
            return;
        }
        let users = JSON.parse(localStorage.getItem('users')) || [];
        if (users.find(u => u.username === username)) {
            alert('–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å —Ç–∞–∫–∏–º –∏–º–µ–Ω–µ–º —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç');
            return;
        }
        users.push({ username, password });
        localStorage.setItem('users', JSON.stringify(users));
        localStorage.setItem('currentUser', username);
        updateAccountUI();
        registerModal.style.display = 'none';
    });
    logoutBtn.addEventListener('click', () => {
        localStorage.removeItem('currentUser');
        updateAccountUI();
    });
    updateAccountUI();
}

function updateAccountUI() {
    const currentUser = localStorage.getItem('currentUser');
    const accountSection = document.getElementById('account-section');
    const userInfo = document.getElementById('user-info');
    if (currentUser) {
        accountSection.style.display = 'none';
        userInfo.style.display = 'block';
        document.getElementById('welcome-msg').textContent = `–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, ${currentUser}!`;
    } else {
        accountSection.style.display = 'block';
        userInfo.style.display = 'none';
    }
}